#include <iostream>
#include <vector>

using namespace std;

// binary search 
// time complexity 0(logn) , 0(1) space
int shiftedArrSearch( const vector<int>& shiftArr, int num ) 
{
  vector<int> arr = shiftArr;
  
  int left = 0 , right = shiftArr.size()-1;
  
  while( left <= right){
    
    int mid = (left+right)/2;
    
    if( num == arr[mid])
      return mid;
    
    if( arr[mid] > num ){
      
      if( arr[mid] > arr[left] && num >= arr[left]) // num will lie btw arr[0] && arr[mid] and arr[0]-arr[mid] is sorted
        right = mid-1;
      
      else
        left = mid+1;
        
    }
    
    else{
      
      if( num <= arr[right])
        left = mid+1;
      
      else
        right = mid-1;
    }
  }
  
  return -1;
}

int main() {
  cout<<"Enter the size of the array\n";
  int n;
  cin >> n;
  vector<int>arr(n);
  cout<<"Add array elements\n";
  
  for(int i = 0 ; i < n ; i++)
    cin >> arr[i];
    
  cout<<"Enter the number to find\n";
  int num;
  cin >> num;

  cout<<shiftedArrSearch( arr, num ) ;
}
